#!/usr/bin/env bash

set -euo pipefail

SERVICE_NAME=${SERVICE_NAME:?}
MAJOR_VERSION=${MAJOR_VERSION:-"2"}
MINOR_VERSION=${MINOR_VERSION:-"0"}
PATCH_VERSION=${PATCH_VERSION:-"\${BUILDKITE_BUILD_NUMBER}"}
TAG="${MAJOR_VERSION}.${MINOR_VERSION}.${PATCH_VERSION}"
TEST_COMMAND=${TEST_COMMAND:-"./ops/ci/test.sh"}
BUILD_COMMAND=${BUILD_COMMAND:-"./ops/ci/build.sh"}
DEPLOY_COMMAND=${DEPLOY_COMMAND:-"./ops/ci/deploy.sh"}
SMOKE_TEST_ENABLED=${SMOKE_TEST_ENABLED:-"true"}

smoke_test_step() {
  ENV=$1
  ENV_UPPERCASE=$(echo $ENV | tr '[a-z]' '[A-Z]')

  if [[ $SMOKE_TEST_ENABLED != "true" ]]; then
    return
  fi

  cat <<-EOF
  - label: ":campfire: Smoke test ${ENV_UPPERCASE}"
    key: smoke-test-${ENV}
    <<: *permit_retry_on_passed
    <<: *if_on_main_or_hotfix
    depends_on:
      - deploy-${ENV}
    plugins:
      - *docker_login
      - docker#v3.8.0:
          image: ailohq/trigger-smoke-tests
          command:
            - api-smoke-tests
            - TEST-${ENV_UPPERCASE}
          environment:
            - smokeTriggerUsername
            - smokeTriggerPassword
EOF
}

smoke_test_step_dependency() {
  ENV=$1

  if [[ $SMOKE_TEST_ENABLED != "true" ]]; then
    return
  fi

  cat <<-EOF
      - smoke-test-${ENV}
EOF
}

# TODO:
# - make it yarn-agnostic, or make it possible to disable it
# - make cache plugin opts customizable
# - make test-reports path customizable

cat <<-EOF
permit_retry_on_passed: &permit_retry_on_passed
  retry:
    manual:
      permit_on_passed: true
cache_opts: &cache_opts
  backend: s3
  s3:
    bucket: ailo-buildkite-cache
if_on_main_or_hotfix: &if_on_main_or_hotfix
  if: build.branch == "\$BUILDKITE_PIPELINE_DEFAULT_BRANCH" || build.branch =~ /^hotfix/
if_on_hotfix: &if_on_hotfix
  if: build.branch =~ /^hotfix/
docker_login: &docker_login
  docker-login#v2.0.1:
    username: \${DOCKER_USERNAME}
    password-env: DOCKER_PASSWORD

env:
  SERVICE_NAME: "$SERVICE_NAME"
  TAG: "$TAG"

steps:
  - label: "Test"
    key: test
    <<: *permit_retry_on_passed
    command: $TEST_COMMAND
    env:
      YARN_CACHE_FOLDER: "/yarn_home/.cache"
    plugins:
      - gencer/cache#v2.3.10:
          <<: *cache_opts
          key: "deps-{{ checksum 'yarn.lock' }}"
          paths:
            - /yarn_home/.cache
            - ./node_modules
      - artifacts#v1.3.0:
          upload: "test-reports/**/*"

  - wait

  - label: "Build"
    key: build
    <<: *permit_retry_on_passed
    <<: *if_on_main_or_hotfix
    depends_on: test
    command: $BUILD_COMMAND
    env:
      YARN_CACHE_FOLDER: "/yarn_home/.cache"
    plugins:
      - *docker_login
      - gencer/cache#v2.3.10:
          <<: *cache_opts
          key: "deps-{{ checksum 'yarn.lock' }}"
          paths:
            - /yarn_home/.cache
            - ./node_modules
      - ailohq/git-tag#v1.0.13:
          release: false
          version: v$TAG

  - wait

  - block: "Approve DEV"
    key: approve-dev
    <<: *if_on_hotfix
    depends_on: ~
  - label: ":rocket: Deploy DEV"
    key: deploy-dev
    <<: *permit_retry_on_passed
    <<: *if_on_main_or_hotfix
    concurrency: 1
    concurrency_group: "${SERVICE_NAME}-deploy-dev"
    depends_on:
      - build
      - approve-dev
    command: $DEPLOY_COMMAND
    env:
      ENV: dev
    plugins:
      - *docker_login
      - ailohq/github-deployment#v1.0.8:
          environment: dev

$(smoke_test_step dev)

  - block: "Approve QA"
    key: approve-qa
    <<: *if_on_main_or_hotfix
    depends_on: ~
  - label: ":rocket: Deploy QA"
    key: deploy-qa
    <<: *permit_retry_on_passed
    <<: *if_on_main_or_hotfix
    concurrency: 1
    concurrency_group: "${SERVICE_NAME}-deploy-qa"
    depends_on:
      - deploy-dev
$(smoke_test_step_dependency dev)
      - approve-qa
    command: $DEPLOY_COMMAND
    env:
      ENV: qa
    plugins:
      - *docker_login
      - ailohq/github-deployment#v1.0.8:
          environment: qa

$(smoke_test_step qa)

  - block: "Approve PREPROD"
    key: approve-preprod
    <<: *if_on_main_or_hotfix
    depends_on: ~
  - label: ":rocket: Deploy PREPROD"
    key: deploy-preprod
    <<: *permit_retry_on_passed
    <<: *if_on_main_or_hotfix
    concurrency: 1
    concurrency_group: "${SERVICE_NAME}-deploy-preprod"
    depends_on:
      - deploy-qa
$(smoke_test_step_dependency qa)
      - approve-preprod
    command: $DEPLOY_COMMAND
    env:
      ENV: preprod
    plugins:
      - *docker_login
      - ailohq/github-deployment#v1.0.8:
          environment: preprod

  - block: "Approve PROD"
    key: approve-prod
    <<: *if_on_main_or_hotfix
    depends_on: ~
  - label: ":tada: Deploy PROD"
    key: deploy-prod
    <<: *permit_retry_on_passed
    <<: *if_on_main_or_hotfix
    concurrency: 1
    concurrency_group: "${SERVICE_NAME}-deploy-prod"
    depends_on:
      - deploy-preprod
      - approve-prod
    command: $DEPLOY_COMMAND
    env:
      ENV: prod
    plugins:
      - *docker_login
      - ailohq/github-deployment#v1.0.8:
          environment: prod

  - block: "Approve SANDBOX"
    key: approve-sandbox
    <<: *if_on_main_or_hotfix
    depends_on: ~
  - label: ":rocket: Deploy SANDBOX"
    key: deploy-sandbox
    <<: *permit_retry_on_passed
    <<: *if_on_main_or_hotfix
    concurrency: 1
    concurrency_group: "${SERVICE_NAME}-deploy-sandbox"
    depends_on:
      - deploy-preprod
      - approve-sandbox
    command: $DEPLOY_COMMAND
    env:
      ENV: sandbox
    plugins:
      - *docker_login
      - ailohq/github-deployment#v1.0.8:
          environment: sandbox
EOF